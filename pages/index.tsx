import React from "react";
import type { NextPage } from "next";
import Head from "next/head";
import {
  Button,
  Text,
  Container,
  Box,
  Heading,
  InputGroup,
  InputLeftElement,
  Icon,
  Input,
  Center,
  Flex,
  Image,
} from "@chakra-ui/react";
import { WarningIcon, CheckCircleIcon } from "@chakra-ui/icons";

const Home: NextPage = () => {
  const [status, setStatus] = React.useState<
    "initial" | "loading" | "verified" | "failed"
  >("initial");

  const uploadPicture = () => {
    console.log("uploadPicture");
  };

  const setImageAction = async (event: any) => {
    event.preventDefault();
    //TODO: update image
    // const data = await fetch("http://localhost:3000/upload/post", {
    //   method: "post",
    //   headers: { "Content-Type": "multipart/form-data" },
    //   body: JSON.stringify({}),
    // });
    // const uploadedImage = await data.json();
    // if (uploadedImage) {
    //   console.log("Successfully uploaded image");
    // } else {
    //   console.log("Error Found");
    // }
    setStatus("verified");
  };

  return (
    <>
      <Head>
        <title>OpenBadge to ION VC Converter</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Heading my="8">OpenBadge to ION VC Converter</Heading>
        {status == "initial" && (
          <>
            <Text>Initial page</Text>
            <div className="content">
              <form onSubmit={setImageAction}>
                <input type="file" name="image" />
                <br />
                <Button type="submit" name="upload">
                  Upload
                </Button>
              </form>
            </div>
          </>
        )}
        {status == "loading" && (
          <>
            <Text>Loading</Text>
            <Button colorScheme="blue" onClick={() => setStatus("verified")}>
              テスト
            </Button>
          </>
        )}
        {status == "verified" && (
          <>
            <Text>verified</Text>
            <Flex direction={"row"}>
              <Image
                src={"/example-openbadge.png"}
                width="md"
                height="auto"
                alt=""
              ></Image>
              <CheckCircleIcon w={24} h={24} color="green.500" />
            </Flex>
            {/* <QR code></QR> */}
            <Button colorScheme="blue" onClick={() => setStatus("failed")}>
              テスト
            </Button>
          </>
        )}
        {status == "failed" && (
          <Box>
            <Center>
              <WarningIcon w={24} h={24} color="red.500" />
            </Center>
            <Center>
              <Text>Verification failed. Reason: </Text>
            </Center>
            <Center>
              <Button
                colorScheme="blue"
                my="4"
                onClick={() => setStatus("initial")}
              >
                Try again
              </Button>
            </Center>
          </Box>
        )}
      </Container>
    </>
  );
};

export default Home;
